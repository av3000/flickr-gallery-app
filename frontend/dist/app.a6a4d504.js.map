{"version":3,"sources":["src/ImageItem.js","src/ImagesList.js","src/app.js"],"names":["ImageItem","title","url","ImagesList","imagesBlockSelector","loadMoreBtnSelector","loadingElementSelector","imagesBlock","document","querySelector","loadMoreBtn","loadingElement","appContext","startLoading","fetchImages","then","res","photos","map","image","console","log","_content","visibility","safety_level","farm","server","id","secret","join","images","innerHTML","stopLoading","catch","error","Promise","resolve","reject","fetch","method","json","classList","add","remove","imagesList","appInit"],"mappings":";;AECA;;AADAoB,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAGA,IAAMuB,UAAU,GAAG,IAAIzC,sBAAJ,CAAe,aAAf,EAA8B,YAA9B,EAA4C,kBAA5C,CAAnB;AACAyC,UAAU,CAACC,OAAX,IACA;AFLO,ACAP,IDAa7C,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,GAAR;AAAA,mGAGED,KAHF,kCAIVC,GAJU;AAAA,CAAlB;;;;;;ICEMC;AACT,sBAAYC,mBAAZ,EAAiCC,mBAAjC,EAAsDC,sBAAtD,EAA6E;AAAA;;AACzE,SAAKC,WAAL,GAAsBC,QAAQ,CAACC,aAAT,CAAuBL,mBAAvB,CAAtB;AACA,SAAKM,WAAL,GAAsBF,QAAQ,CAACC,aAAT,CAAuBJ,mBAAvB,CAAtB;AACA,SAAKM,cAAL,GAAsBH,QAAQ,CAACC,aAAT,CAAuBH,sBAAvB,CAAtB;AACA,SAAKM,UAAL,GAAkB,EAAlB;AACA,SAAKC,YAAL;AACH;;;;8BAEQ;AAAA;;AACL,WAAKC,WAAL,GAAmBC,IAAnB,CAAwB,UAAAC,GAAG,EAAI;AAC3B,eAAOA,GAAG,CAACC,MAAJ,CACEC,GADF,CACM,UAAAC,KAAK,EAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAUF,KAAK,CAAClB,KAAN,CAAYqB,QAAlC;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAAK,CAACI,UAAlC;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAUF,KAAK,CAACK,YAA5B;AACA,cAAItB,GAAG,GACH,gBACCiB,KAAK,CAACM,IADP,GAEA,oBAFA,GAGCN,KAAK,CAACO,MAHP,GAGc,GAHd,GAIAP,KAAK,CAACQ,EAJN,GAIS,GAJT,GAIaR,KAAK,CAACS,MAJnB,GAI0B,MAL9B;AAMA,iBAAO,0BAAUT,KAAK,CAAClB,KAAN,CAAYqB,QAAtB,EAAgCpB,GAAhC,CAAP;AACH,SAZF,EAaE2B,IAbF,CAaO,EAbP,CAAP;AAcH,OAfD,EAgBCd,IAhBD,CAgBM,UAAAe,MAAM,EAAI;AACZ,QAAA,KAAI,CAACvB,WAAL,CAAiBwB,SAAjB,GAA6BD,MAA7B;;AACA,QAAA,KAAI,CAACE,WAAL;AACH,OAnBD,EAoBCC,KApBD,CAoBO,UAAAC,KAAK,EAAI;AACZd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,OAtBD;AAuBH;;;kCAEY;AAAA;;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAO,IAAIc,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,eAAOC,KAAK,qCAAqC;AAC7CC,UAAAA,MAAM,EAAE;AADqC,SAArC,CAAL,CAGFxB,IAHE,CAGG,UAAAC,GAAG,EAAI;AACT,iBAAOA,GAAG,CAACwB,IAAJ,EAAP;AACH,SALE,EAMFzB,IANE,CAMG,UAAAC,GAAG,EAAI;AACT,UAAA,MAAI,CAACJ,UAAL,GAAkBI,GAAlB;AACA,iBAAOoB,OAAO,CAACpB,GAAD,CAAd;AACH,SATE,EAUFiB,KAVE,CAUI,UAAAC,KAAK,EAAI;AACZd,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,iBAAOG,MAAM,EAAb;AACH,SAbE,CAAP;AAeD,OAhBO,CAAP;AAkBF;;;mCAEc;AACX,WAAK1B,cAAL,CAAoB8B,SAApB,CAA8BC,GAA9B,CAAkC,SAAlC;AACH;;;kCAEa;AACV,WAAK/B,cAAL,CAAoB8B,SAApB,CAA8BE,MAA9B,CAAqC,SAArC;AACH","file":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["export const ImageItem = (title, url) => `\n<div class=\"card\">\n  <div class=\"card-body\">\n  <h4 class=\"card-title\">${title}</h4>\n  <img  src=\"${url}\"/>\n  </div>\n</div>\n`;","import { ImageItem } from './ImageItem';\n\nexport class ImagesList {\n    constructor(imagesBlockSelector, loadMoreBtnSelector, loadingElementSelector){\n        this.imagesBlock    = document.querySelector(imagesBlockSelector);\n        this.loadMoreBtn    = document.querySelector(loadMoreBtnSelector);\n        this.loadingElement = document.querySelector(loadingElementSelector);\n        this.appContext = {};\n        this.startLoading();\n    };\n\n    appInit(){\n        this.fetchImages().then(res => {\n            return res.photos\n                    .map(image => {\n                        console.log(\"title: \"+image.title._content);\n                        console.log(\"visibility: \", image.visibility);\n                        console.log(\"safety:\"+image.safety_level);\n                        let url = \n                            'http://farm'\n                            +image.farm+\n                            '.staticflickr.com/'\n                            +image.server+'/'+\n                            image.id+'_'+image.secret+'.jpg';\n                        return ImageItem(image.title._content, url)\n                    })\n                    .join('')\n        })\n        .then(images => {\n            this.imagesBlock.innerHTML = images;\n            this.stopLoading();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    fetchImages(){\n       console.log(\"getImages\");\n       return new Promise((resolve, reject) => {\n        return fetch(`http://localhost:8081/api/photos`, {\n            method: 'GET',\n        })\n            .then(res => {\n                return res.json();     \n            })\n            .then(res => {\n                this.appContext = res;\n                return resolve(res);\n            })\n            .catch(error => {\n                console.log(error);\n                return reject();\n            });\n    \n      });\n        \n    }\n\n    startLoading() {\n        this.loadingElement.classList.add('loading');\n    }\n\n    stopLoading() {\n        this.loadingElement.classList.remove('loading');\n    }\n}","console.log(\"app is connected.\");\nimport { ImagesList } from './ImagesList';\n\nconst imagesList = new ImagesList('#images-app', '#load-more', '.loading-element');\nimagesList.appInit();\n// ImagesList.configureInfiniteLoadListener();"]}