{"version":3,"sources":["src/ImageItem.js","src/ImagesList.js","src/app.js"],"names":["ImageItem","title","url","ImagesList","imagesBlockSelector","loadMoreBtnSelector","loadingElementSelector","imagesBlock","document","querySelector","loadMoreBtn","loadingElement","appContext","startLoading","fetchImages","then","res","photos","map","image","console","log","farm","server","id","secret","join","images","innerHTML","stopLoading","catch","error","Promise","resolve","reject","fetch","method","json","classList","add","remove","imagesList","appInit"],"mappings":";;AECA;;AADAoB,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAGA,IAAMoB,UAAU,GAAG,IAAItC,sBAAJ,CAAe,aAAf,EAA8B,YAA9B,EAA4C,kBAA5C,CAAnB;AACAsC,UAAU,CAACC,OAAX,IACA;AFLO,ACAP,IDAa1C,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,GAAR;AAAA,4EAEED,KAFF,iCAGXC,GAHW;AAAA,CAAlB;;;AAOP;AAAC;;ICLYC;AACT,sBAAYC,mBAAZ,EAAiCC,mBAAjC,EAAsDC,sBAAtD,EAA6E;AAAA;;ADSvE,ACRF,SAAKC,WAAL,GAAsBC,QAAQ,CAACC,aAAT,CAAuBL,mBAAvB,CAAtB;AACA,SAAKM,WAAL,GAAsBF,QAAQ,CAACC,aAAT,CAAuBJ,mBAAvB,CAAtB;AACA,SAAKM,cAAL,GAAsBH,QAAQ,CAACC,aAAT,CAAuBH,sBAAvB,CAAtB;AACA,SAAKM,UAAL,GAAkB,EAAlB;AACA,SAAKC,YAAL;AACH;;;;8BAEQ;AAAA;;AACL,WAAKC,WAAL,GAAmBC,IAAnB,CAAwB,UAAAC,GAAG,EAAI;AAC3B,eAAOA,GAAG,CAACC,MAAJ,CACEC,GADF,CACM,UAAAC,KAAK,EAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,KAAK,CAAClB,KAA9B;AACA,cAAIC,GAAG,GACH,gBACCiB,KAAK,CAACG,IADP,GAEA,oBAFA,GAGCH,KAAK,CAACI,MAHP,GAGc,GAHd,GAIAJ,KAAK,CAACK,EAJN,GAIS,GAJT,GAIaL,KAAK,CAACM,MAJnB,GAI0B,MAL9B;AAOAL,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAUnB,GAAtB;AAEA,iBAAO,0BAAUiB,KAAK,CAAClB,KAAhB,EAAuBC,GAAvB,CAAP;AACH,SAbF,EAcEwB,IAdF,CAcO,EAdP,CAAP;AAeH,OAhBD,EAiBCX,IAjBD,CAiBM,UAAAY,MAAM,EAAI;AACZ,QAAA,KAAI,CAACpB,WAAL,CAAiBqB,SAAjB,GAA6BD,MAA7B;;AACA,QAAA,KAAI,CAACE,WAAL;AACH,OApBD,EAqBCC,KArBD,CAqBO,UAAAC,KAAK,EAAI;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH,OAvBD;AAwBH;;;kCAEY;AAAA;;AACVX,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAO,IAAIW,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,eAAOC,KAAK,qCAAqC;AAC7CC,UAAAA,MAAM,EAAE;AADqC,SAArC,CAAL,CAGFrB,IAHE,CAGG,UAAAC,GAAG,EAAI;AACT,iBAAOA,GAAG,CAACqB,IAAJ,EAAP;AACH,SALE,EAMFtB,IANE,CAMG,UAAAC,GAAG,EAAI;AACT,UAAA,MAAI,CAACJ,UAAL,GAAkBI,GAAlB;AACA,iBAAOiB,OAAO,CAACjB,GAAD,CAAd;AACH,SATE,EAUFc,KAVE,CAUI,UAAAC,KAAK,EAAI;AACZX,UAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,iBAAOG,MAAM,EAAb;AACH,SAbE,CAAP;AAeD,OAhBO,CAAP;AAkBF;;;mCAEc;AACX,WAAKvB,cAAL,CAAoB2B,SAApB,CAA8BC,GAA9B,CAAkC,SAAlC;AACH;;;kCAEa;AACV,WAAK5B,cAAL,CAAoB2B,SAApB,CAA8BE,MAA9B,CAAqC,SAArC;AACH","file":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["export const ImageItem = (title, url) => `\n<div class=\"image-card\">\n  <h5 class=\"card-title\">${title}</h5>\n  <img src=\"${url}\"/>\n</div>\n`;\n\n{/* <div class=\"card\">\n  <div class=\"card-body\">\n  <h4 class=\"card-title\">${title}</h4>\n  <img src=\"${url}\"/>\n  </div>\n</div> */}","import { ImageItem } from './ImageItem';\n\nexport class ImagesList {\n    constructor(imagesBlockSelector, loadMoreBtnSelector, loadingElementSelector){\n        this.imagesBlock    = document.querySelector(imagesBlockSelector);\n        this.loadMoreBtn    = document.querySelector(loadMoreBtnSelector);\n        this.loadingElement = document.querySelector(loadingElementSelector);\n        this.appContext = {};\n        this.startLoading();\n    };\n\n    appInit(){\n        this.fetchImages().then(res => {\n            return res.photos\n                    .map(image => {\n                        console.log(\"title: \" + image.title);\n                        let url = \n                            'http://farm'\n                            +image.farm+\n                            '.staticflickr.com/'\n                            +image.server+'/'+\n                            image.id+'_'+image.secret+'.jpg';\n\n                        console.log(\"url: \" + url);\n\n                        return ImageItem(image.title, url)\n                    })\n                    .join('')\n        })\n        .then(images => {\n            this.imagesBlock.innerHTML = images;\n            this.stopLoading();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    fetchImages(){\n       console.log(\"getImages\");\n       return new Promise((resolve, reject) => {\n        return fetch(`http://localhost:8081/api/photos`, {\n            method: 'GET',\n        })\n            .then(res => {\n                return res.json();     \n            })\n            .then(res => {\n                this.appContext = res;\n                return resolve(res);\n            })\n            .catch(error => {\n                console.log(error);\n                return reject();\n            });\n    \n      });\n        \n    }\n\n    startLoading() {\n        this.loadingElement.classList.add('loading');\n    }\n\n    stopLoading() {\n        this.loadingElement.classList.remove('loading');\n    }\n}","console.log(\"app is connected.\");\nimport { ImagesList } from './ImagesList';\n\nconst imagesList = new ImagesList('#images-app', '#load-more', '.loading-element');\nimagesList.appInit();\n// ImagesList.configureInfiniteLoadListener();"]}