{"version":3,"sources":["src/ImageItem.js","src/ImagesList.js","src/app.js"],"names":["ImageItem","title","url","ImagesList","imagesBlockSelector","loadMoreBtnSelector","loadingElementSelector","imagesBlock","document","querySelector","loadMoreBtn","loadingElement","appContext","page","perpage","keyword","photos","startLoading","window","addEventListener","documentElement","scrollTop","scrollHeight","clientHeight","loadMore","then","res","generatePhotosToDom","images","innerHTML","stopLoading","catch","error","console","log","map","image","farm","server","id","secret","join","params","urlParams","URLSearchParams","Object","entries","Promise","resolve","reject","fetch","json","fetchImages","classList","add","remove","imagesList","appInit"],"mappings":"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","file":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["export const ImageItem = (title, url) => `\n<div class=\"image-card\">\n  <h5 class=\"card-title\">${title}</h5>\n  <img src=\"${url}\"/>\n</div>\n`;\n\n{/* <div class=\"card\">\n  <div class=\"card-body\">\n  <h4 class=\"card-title\">${title}</h4>\n  <img src=\"${url}\"/>\n  </div>\n</div> */}","import { ImageItem } from './ImageItem';\n\nexport class ImagesList {\n    constructor(imagesBlockSelector, loadMoreBtnSelector, loadingElementSelector){\n        this.imagesBlock    = document.querySelector(imagesBlockSelector);\n        this.loadMoreBtn    = document.querySelector(loadMoreBtnSelector);\n        this.loadingElement = document.querySelector(loadingElementSelector);\n        this.url = 'http://localhost:8081/api/photos?';\n        this.appContext = {};\n        this.appContext.page = 1;\n        this.appContext.perpage = 10;\n        this.appContext.keyword = \"\";\n        this.appContext.photos = [];\n        this.startLoading();\n        window.addEventListener('scroll', () => {\n            const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n            \n            if(clientHeight + scrollTop >= scrollHeight - 5) {\n                    this.loadMore(this.appContext.page, this.appContext.perpage).then(res => {\n                    \n                    return this.generatePhotosToDom(res.photos);\n                })\n                .then(images => {\n                    this.imagesBlock.innerHTML += images;\n                    this.stopLoading();\n                })\n                .catch(error => {\n                    console.log(error);\n                    this.stopLoading();\n                });\n            }\n\n        });\n    };\n\n    generatePhotosToDom(photos) {\n       \n        return photos\n            .map(image => {\n                let url = \n                    'http://farm'\n                    +image.farm+\n                    '.staticflickr.com/'\n                    +image.server+'/'+\n                    image.id+'_'+image.secret+'.jpg';\n\n                return ImageItem(image.title, url)\n            })\n            .join('')\n    }\n\n    loadMore(page, perpage){\n        let params = { page: page, perpage: perpage }\n        const urlParams = new URLSearchParams(Object.entries(params));\n\n        this.startLoading();\n\n        return new Promise((resolve, reject) => {\n         return fetch(this.url + urlParams)\n             .then(res => {\n                 return res.json();     \n             })\n             .then(res => {\n                //  this.appContext = res;\n                 this.appContext.photos += res.photos;\n                 this.appContext.page = res.page;\n                 this.appContext.perpage = res.perpage;\n                 return resolve(res);\n             })\n             .catch(error => {\n                 console.log(error);\n                 return reject();\n             });\n       });\n    }\n\n    appInit(){\n        this.fetchImages(this.appContext.page, this.appContext.perpage).then(res => {\n            return this.generatePhotosToDom(res.photos);\n        })\n        .then(images => {\n            this.imagesBlock.innerHTML = images;\n            this.stopLoading();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    fetchImages(page, perpage){\n        let params = { page: page, perpage: perpage }\n        const urlParams = new URLSearchParams(Object.entries(params));\n\n        return new Promise((resolve, reject) => {\n          return fetch(this.url + urlParams)\n            .then(res => {\n                return res.json();     \n            })\n            .then(res => {\n                this.appContext = res;\n                return resolve(res);\n            })\n            .catch(error => {\n                console.log(error);\n                return reject();\n            });\n      });\n    }\n\n    startLoading() {\n        this.loadingElement.classList.add('loading');\n    }\n\n    stopLoading() {\n        this.loadingElement.classList.remove('loading');\n    }\n}","console.log(\"app is connected.\");\nimport { ImagesList } from './ImagesList';\n\nconst imagesList = new ImagesList('#images-app', '#load-more', '.loading-element');\nimagesList.appInit();\n// ImagesList.configureInfiniteLoadListener();"]}